name: grafana-loki

networks:
  grafana-loki-network:
    name: grafana-loki-network
    driver: bridge

services:
  loki:
    image: grafana/loki:latest
    restart: unless-stopped
    container_name: grafana-loki
    mem_limit: ${LOKI_MEMORY_LIMIT:-512m}
    ports:
      - "${LOKI_PORT:-7100}:3100"
    volumes:
      - grafana-loki-data:/loki
    networks:
      - grafana-loki-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "environment=${ENVIRONMENT:-dev}"
      - "service_type=monitoring"
      - "service_name=loki"
      - "monitoring_stack=observability"
      - "monitoring_role=log-aggregation"
      - "container_group=monitoring"
      - "monitoring_enabled=true"

  promtail:
    image: grafana/promtail:latest
    restart: unless-stopped
    container_name: grafana-promtail
    mem_limit: ${PROMTAIL_MEMORY_LIMIT:-256m}
    volumes:
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint:
      - sh
      - -euc
      - |
        apt-get update && apt-get install -y wget || echo "wget install failed, continuing..."
        mkdir -p /etc/promtail
        cat <<EOF > /etc/promtail/config.yml
        server:
          http_listen_port: 9080
          grpc_listen_port: 0
        
        positions:
          filename: /tmp/positions.yaml
        
        clients:
          - url: http://loki:3100/loki/api/v1/push
        
        
        scrape_configs:
          - job_name: containers
            docker_sd_configs:
              - host: unix:///var/run/docker.sock
                refresh_interval: 5s
            relabel_configs:
              - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
                target_label: 'service_name'
              - source_labels: ['__meta_docker_container_label_com_docker_compose_project']
                target_label: 'compose_project'
              - source_labels: ['__meta_docker_container_label_environment']
                target_label: 'environment'
              - source_labels: ['__meta_docker_container_label_service_type']
                target_label: 'service_type'
              - source_labels: ['__meta_docker_container_label_database_type']
                target_label: 'database_type'
              - source_labels: ['__meta_docker_container_label_container_group']
                target_label: 'container_group'
              - source_labels: ['__meta_docker_container_label_monitoring_enabled']
                target_label: 'monitoring_enabled'
              - source_labels: ['__meta_docker_container_name']
                regex: '/(.*)'
                target_label: 'container_name'
              - source_labels: ['__meta_docker_container_id']
                target_label: 'instance'
              - source_labels: ['__meta_docker_container_image']
                target_label: 'image'
            pipeline_stages:
              - docker: {}
        EOF
        /usr/bin/promtail -config.file=/etc/promtail/config.yml
    networks:
      - grafana-loki-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9080/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "environment=${ENVIRONMENT:-dev}"
      - "service_type=monitoring"
      - "service_name=promtail"
      - "monitoring_stack=observability"
      - "monitoring_role=log-collection"
      - "container_group=monitoring"
      - "monitoring_enabled=true"

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    container_name: grafana
    mem_limit: ${GRAFANA_MEMORY_LIMIT:-512m}
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-changeme}
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    volumes:
      - grafana-data:/var/lib/grafana
      - ./dashboards:/var/lib/grafana/dashboards
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        mkdir -p /etc/grafana/provisioning/dashboards
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        cat <<EOF > /etc/grafana/provisioning/dashboards/dashboards.yaml
        apiVersion: 1
        providers:
        - name: 'Grafana Dashboards'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: true
          updateIntervalSeconds: 5
          allowUiUpdates: false
          options:
            path: /var/lib/grafana/dashboards
            foldersFromFilesStructure: false
        EOF
        /run.sh
    ports:
      - "${GRAFANA_PORT:-7000}:3000"
    networks:
      - grafana-loki-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "environment=${ENVIRONMENT:-dev}"
      - "service_type=monitoring"
      - "service_name=grafana"
      - "monitoring_stack=observability"
      - "monitoring_role=visualization"
      - "ui_type=web"
      - "container_group=monitoring"
      - "monitoring_enabled=true"

volumes:
  grafana-loki-data:
  grafana-data: