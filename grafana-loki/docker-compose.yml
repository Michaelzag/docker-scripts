name: grafana-loki

networks:
  grafana-loki-network:
    name: grafana-loki-network
    driver: bridge

services:
  loki:
    image: grafana/loki:latest
    restart: unless-stopped
    container_name: grafana-loki
    mem_limit: ${LOKI_MEMORY_LIMIT:-512m}
    ports:
      - "${LOKI_PORT:-7100}:3100"
    volumes:
      - grafana-loki-data:/loki
    networks:
      - grafana-loki-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "environment=${ENVIRONMENT:-dev}"
      - "service.type=monitoring"
      - "service.name=loki"
      - "monitoring.stack=observability"
      - "monitoring.role=log-aggregation"
      - "container.group=monitoring"
      - "monitoring.enabled=true"

  promtail:
    image: grafana/promtail:latest
    restart: unless-stopped
    container_name: grafana-promtail
    mem_limit: ${PROMTAIL_MEMORY_LIMIT:-256m}
    volumes:
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/promtail
        cat <<EOF > /etc/promtail/config.yml
        server:
          http_listen_port: 9080
          grpc_listen_port: 0
        
        positions:
          filename: /tmp/positions.yaml
        
        clients:
          - url: http://loki:3100/loki/api/v1/push
        
        scrape_configs:
          - job_name: containers
            static_configs:
              - targets:
                  - localhost
                labels:
                  job: containerlogs
                  __path__: /var/lib/docker/containers/*/*log
            pipeline_stages:
              - docker: {}
              - json:
                  expressions:
                    output: log
                    stream: stream
                    attrs:
              - json:
                  source: attrs
                  expressions:
                    tag:
              - regex:
                  source: tag
                  expression: (?P<container_name>(?:[^|]*))\|
              - timestamp:
                  source: time
                  format: RFC3339Nano
              - labels:
                  stream:
                  container_name:
                  environment:
                  service_type:
                  service_name:
                  database_type:
                  monitoring_stack:
              - output:
                  source: output
        EOF
        /usr/bin/promtail -config.file=/etc/promtail/config.yml
    networks:
      - grafana-loki-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9080/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "environment=${ENVIRONMENT:-dev}"
      - "service.type=monitoring"
      - "service.name=promtail"
      - "monitoring.stack=observability"
      - "monitoring.role=log-collection"
      - "container.group=monitoring"
      - "monitoring.enabled=true"

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    container_name: grafana
    mem_limit: ${GRAFANA_MEMORY_LIMIT:-512m}
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-changeme}
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    volumes:
      - grafana-data:/var/lib/grafana
      - ./dashboards:/var/lib/grafana/dashboards
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        mkdir -p /etc/grafana/provisioning/dashboards
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        cat <<EOF > /etc/grafana/provisioning/dashboards/dashboards.yaml
        apiVersion: 1
        providers:
        - name: 'Grafana Dashboards'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          updateIntervalSeconds: 10
          allowUiUpdates: true
          options:
            path: /var/lib/grafana/dashboards
        EOF
        /run.sh
    ports:
      - "${GRAFANA_PORT:-7000}:3000"
    networks:
      - grafana-loki-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "environment=${ENVIRONMENT:-dev}"
      - "service.type=monitoring"
      - "service.name=grafana"
      - "monitoring.stack=observability"
      - "monitoring.role=visualization"
      - "ui.type=web"
      - "container.group=monitoring"
      - "monitoring.enabled=true"

volumes:
  grafana-loki-data:
  grafana-data: